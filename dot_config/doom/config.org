#+title: DOOM Emacs Config
#+author: Yiheng He

* UI
** Font
Sets the font to =JetBrains Mono= because I liked it the most when tested on the website https://www.codingfont.com/
#+begin_src emacs-lisp
(setq doom-font (font-spec :family "JetBrains Mono" :size 13))
#+end_src

** Theme
Sets the theme to tokyo night
#+begin_src emacs-lisp
(setq doom-theme 'doom-tokyo-night)
#+end_src
** Line numbers
#+begin_src emacs-lisp
(setq display-line-numbers-type `relative)
#+end_src


* Org
#+begin_src emacs-lisp
(setq org-directory "~/org/")
(setq org-agenda-files '("~/org/agenda.org" "~/school/school.org"))
#+end_src

** Org Roam
#+begin_src emacs-lisp
(use-package! websocket
  :after org-roam)

(use-package! org-roam-ui
  :after org-roam ;; or :after org
  ;;         normally we'd recommend hooking orui after org-roam, but since org-roam does not have
  ;;         a hookable mode anymore, you're advised to pick something yourself
  ;;         if you don't care about startup time, use
  ;;  :hook (after-init . org-roam-ui-mode)
  :config
  (setq org-roam-ui-sync-theme t
        org-roam-ui-follow t
        org-roam-ui-update-on-save t
        org-roam-ui-open-on-start t))
#+end_src

** Org agenda
#+begin_src emacs-lisp
(setq cycle-date '((12 18 2023) 5))

(defun school-timetable (date day)
  (= (school-cycle-day date) day))

(defun school-cycle-day (date)
  (if (weekdayp date)
      (+ (% (+ (- (nth 1 cycle-date) 1) (weekdays-since (nth 0 cycle-date) date)) 6) 1)
    0))

(defun weekdays-since (start-date end-date)
  (let ((weekdays 0))
    (dotimes (i (- (calendar-absolute-from-gregorian end-date)
                   (calendar-absolute-from-gregorian start-date)))
      (let ((current-date (calendar-gregorian-from-absolute (+ (calendar-absolute-from-gregorian start-date) i))))
        (when (weekdayp current-date)
          (setq weekdays (+ weekdays 1)))))
    weekdays))

(defun weekdayp (date)
  (memq (calendar-day-of-week date) '(1 2 3 4 5)))
#+end_src

** Org Auto Export
#+begin_src emacs-lisp
(defun async-org-latex-export-to-pdf ()
  (org-latex-export-to-pdf t))

(defun toggle-pdf-export-on-save ()
  "Enable or disable export PDF when saving current buffer."
  (interactive)
  (when (not (eq major-mode 'org-mode))
    (error "Not an org-mode file!"))
  (if (memq 'async-org-latex-export-to-pdf after-save-hook)
      (progn (remove-hook 'after-save-hook 'async-org-latex-export-to-pdf t)
             (message "Disabled org pdf export on save"))
    (add-hook 'after-save-hook 'async-org-latex-export-to-pdf nil t)
    (message "Enabled org pdf export on save")))
#+end_src
