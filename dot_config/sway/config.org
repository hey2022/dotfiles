#+title: Sway Config
#+auto_tangle: t
#+property: header-args :tangle config

#+begin_src conf
include /etc/sway/config.d/*
#+end_src

* Sway
** Modifier key
Set modifier to the super key
#+begin_src conf
set $mod mod4
#+end_src

** Direction Keys
Use vim keys for navigation
#+begin_src conf
set $left h
set $down j
set $up k
set $right l
#+end_src

** Reload configuration
#+begin_src conf
bindsym $mod+shift+r reload
#+end_src

** Exit Sway
#+begin_src conf
bindsym $mod+shift+e exec swaynag -t warning -m 'Do you really want to exit sway?' -B 'Yes, exit sway' 'swaymsg exit'
#+end_src

** Gaps
#+begin_src conf
gaps inner 10
#+end_src

** Borders
#+begin_src conf
default_border pixel 5
#+end_src

** Bar
#+begin_src conf
bar {
    swaybar_command waybar
}
#+end_src

* Output
Outputs can also be configured by wlr-randr
** Output Positions
#+begin_src conf
output eDP-1 pos 0 0
output HDMI1 pos 1920 0
#+end_src

** Clamshell
Turn off laptop monitor when lid is shut
#+begin_src conf
set $laptop eDP-1
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable
#+end_src

* Autostart
** Swayidle
#+begin_src conf
exec swayidle -w
#+end_src

** Notification daemon
#+begin_src conf
exec mako
#+end_src

** Emacs
Start Emacs daemon at startup for emacsclient
#+begin_src conf
exec emacs --daemon
#+end_src

** Night Shift
#+begin_src conf
exec gammastep
#+end_src

** Background
#+begin_src conf
exec swww-daemon
#+end_src

* Inputs
Get the names of inputs by running: swaymsg -t get_inputs
See /usr/share/X11/xkb/rules/xorg.lst for options
** Keyboard
Using keyd to remap caps to escape and ctrl instead of xkb_options.
#+begin_src conf :tangle no
input type:keyboard {
  # xkb_options caps:escape
}
#+end_src

** Pointers
*** Touchpad
#+begin_src conf
input type:touchpad {
    natural_scroll enabled
    dwt disabled
    tap enabled
}
#+end_src

*** Trackpoint
The almighty red dot
#+begin_src conf
input "2:10:TPPS/2_Elan_TrackPoint" {
    pointer_accel 1
    accel_profile "flat"
}
#+end_src

* Window Management
*** Switch Focus
#+begin_src conf
bindsym $mod+tab focus next
bindsym $mod+shift+tab focus prev
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Arrow keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# focus parent
bindsym $mod+a focus parent
#+end_src

*** Move Window
#+begin_src conf
bindsym $mod+shift+$left move left
bindsym $mod+shift+$down move down
bindsym $mod+shift+$up move up
bindsym $mod+shift+$right move right

# Arrow keys
bindsym $mod+shift+Left move left
bindsym $mod+shift+Down move down
bindsym $mod+shift+Up move up
bindsym $mod+shift+Right move right
#+end_src

*** Switch to Workspace
#+begin_src conf
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
bindsym $mod+minus workspace Scratch
#+end_src

**** Gestures
#+begin_src conf
bindgesture swipe:right workspace prev
bindgesture swipe:left workspace next
#+end_src

**** Monitor switch workspace
Move workspace to current output and switch to it
#+begin_src conf
bindsym $mod+control+1 [workspace=1] move workspace to output current, workspace number 1
bindsym $mod+control+2 [workspace=2] move workspace to output current, workspace number 2
bindsym $mod+control+3 [workspace=3] move workspace to output current, workspace number 3
bindsym $mod+control+4 [workspace=4] move workspace to output current, workspace number 4
bindsym $mod+control+5 [workspace=5] move workspace to output current, workspace number 5
bindsym $mod+control+6 [workspace=6] move workspace to output current, workspace number 6
bindsym $mod+control+7 [workspace=7] move workspace to output current, workspace number 7
bindsym $mod+control+8 [workspace=8] move workspace to output current, workspace number 8
bindsym $mod+control+9 [workspace=9] move workspace to output current, workspace number 9
bindsym $mod+control+0 [workspace=10] move workspace to output current, workspace number 10
bindsym $mod+control+minus [workspace=Scratch] move workspace to output current, workspace Scratch
#+end_src

*** Move Window to Workspace
#+begin_src conf
bindsym $mod+shift+1 move container to workspace number 1
bindsym $mod+shift+2 move container to workspace number 2
bindsym $mod+shift+3 move container to workspace number 3
bindsym $mod+shift+4 move container to workspace number 4
bindsym $mod+shift+5 move container to workspace number 5
bindsym $mod+shift+6 move container to workspace number 6
bindsym $mod+shift+7 move container to workspace number 7
bindsym $mod+shift+8 move container to workspace number 8
bindsym $mod+shift+9 move container to workspace number 9
bindsym $mod+shift+0 move container to workspace number 10
bindsym $mod+shift+minus move container to workspace Scratch
#+end_src

*** Resize windows
#+begin_src conf
mode "resize" {
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    bindsym return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"
#+end_src

*** Scratchpad
For popup terminal
#+begin_src conf
bindsym $mod+grave Scratchpad show
bindsym $mod+shift+grave floating enable, resize set 1440 810, move position center, move Scratchpad
#+end_src

*** Kill Windows
#+begin_src conf
bindsym $mod+q kill

# Force kill
bindsym $mod+shift+q exec ~/.config/sway/force_kill.sh
#+end_src

*** Layout
**** Splits
Change split direction
#+begin_src conf
bindsym $mod+b splith
bindsym $mod+v splitv
bindsym $mod+n split none
#+end_src
**** Switch layouts
#+begin_src conf
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split
#+end_src
*** Floating windows
#+begin_src conf
floating_modifier $mod normal
bindsym $mod+x floating toggle
bindsym mod1+tab focus mode_toggle
#+end_src

*** Output
**** Change output focus
#+begin_src conf
bindsym $mod+control+$left focus output left
bindsym $mod+control+$down focus output down
bindsym $mod+control+$up focus output up
bindsym $mod+control+$right focus output right
#+end_src
**** Move to output
#+begin_src conf
bindsym $mod+control+shift+$left move workspace to output left
bindsym $mod+control+shift+$down move workspace to output down
bindsym $mod+control+shift+$up move workspace to output up
bindsym $mod+control+shift+$right move workspace to output right
 #+end_src

*** Fullscreen
#+begin_src conf
bindsym $mod+f fullscreen
#+end_src

* Keybindings
** Applications
*** Terminal
#+begin_src conf
bindsym $mod+return exec foot
#+end_src

*** Emacs
#+begin_src conf
bindsym $mod+shift+return exec emacsclient -c
#+end_src

** Media Keys
*** Pipewire
#+begin_src conf
bindsym XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindsym XF86AudioMicMute exec wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
#+end_src

*** Brightness
#+begin_src conf
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set 5%+
#+end_src

*** Player
#+begin_src conf
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
#+end_src

** Screenshots
#+begin_src conf
set $screenshot_path $(xdg-user-dir PICTURES)/screenshots/$(date +"%Y%m%d%H%M%S").png

bindsym $mod+insert exec grim $screenshot_path
bindsym $mod+ctrl+insert exec grim - | wl-copy

bindsym $mod+shift+insert exec grim -g "$(slurp)" $screenshot_path
bindsym $mod+ctrl+shift+insert exec grim -g "$(slurp)" - | wl-copy
#+end_src

** Wallpaper switcher
Wallpaper switcher that uses tofi to change swww wallpaper
#+begin_src conf
bindsym $mod+w exec ~/.config/scripts/wallpaper.sh
#+end_src

** Screen locker
#+begin_src conf
bindsym $mod+escape exec swaylock
#+end_src

** Launcher
#+begin_src conf
set $menu tofi-run | xargs swaymsg exec --
bindsym $mod+space exec $menu

set $drun tofi-drun | xargs swaymsg exec --
bindsym $mod+shift+space exec $drun
#+end_src
